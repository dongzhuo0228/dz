<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
	
	
	<!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
	<context:component-scan base-package="dz.aaa.ssm.controller"></context:component-scan>
	
	
	<!-- 解决静态资源不可访问 -->
	<mvc:default-servlet-handler/>
	<!-- 一般都要有这个东西  比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven -->
	<!--validator="validator" 注入验证器  -->
<!-- 	<mvc:annotation-driven conversion-service="conversionService"  validator="validator" >
        <mvc:argument-resolvers>  
             <bean class="dz.aaa.ssm.common.UserArgumentResolver">
                 <property name="LOGIN_USER_SESSION_NAME" value="user" />
             </bean>  
           </mvc:argument-resolvers>  
	</mvc:annotation-driven>
	 -->
		

	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		配置jsp路径的前缀
		<property name="prefix" value="/"/>
		配置jsp路径的后缀
		<property name="suffix" value=".jsp"/>
	</bean> -->
	
	
	
	<!-- 自定义参数转换  -->
	<!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				注册日期转换器
				<bean class="dz.aaa.ssm.converter.DateConverter"></bean>
			</list>
		</property>
	</bean> -->
	
	
	<!-- 校验器 -->
	<!-- <bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		hibernate校验器
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties
		<property name="validationMessageSource" ref="messageSource" />
	</bean> -->
<!-- 校验错误信息配置文件 -->
	<!-- <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		资源文件名
		<property name="basenames">   
       	 <list>    
            <value>classpath:CustomValidationMessages</value> 
       	 </list>   
    	</property>
		资源文件编码格式
		<property name="fileEncodings" value="utf-8" />
		对资源文件内容缓存时间，单位秒
		<property name="cacheSeconds" value="120" />
	</bean> -->
	<!-- 全局异常处理器
	只要实现HandlerExceptionResolver接口就是全局异常处理器
	 -->
	<!-- <bean class="dz.aaa.ssm.exception.CustomExceptionResolver"></bean> -->
	
	
	<!-- 文件上传 -->
	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		设置上传文件的最大尺寸为5MB
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean> -->
	
	
		<!--拦截器 -->
		
		
<!-- <mvc:interceptors>
	多个拦截器,顺序执行
	登陆认证拦截器
	<mvc:interceptor>
		<mvc:mapping path="/**"/>
		<bean class="dz.aaa.ssm.interceptor.LoginInterceptor"></bean>
	</mvc:interceptor>
	<mvc:interceptor>
		/**表示所有url包括子url路径
		<mvc:mapping path="/**"/>
		<bean class="dz.aaa.ssm.interceptor.InterceptorTest"></bean>
	</mvc:interceptor>
	<mvc:interceptor>
		<mvc:mapping path="/**"/>
		<bean class="cn.itcast.ssm.interceptor.HandlerInterceptor2"></bean>
	</mvc:interceptor>
</mvc:interceptors> -->

 <mvc:annotation-driven>
    <mvc:message-converters register-defaults="false">
      <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
      <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
            <value>text/html;charset=UTF-8</value>
            <value>application/json;charset=UTF-8</value>
          </list>
        </property>
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven>
  <context:annotation-config />

	
	
	
	
</beans>